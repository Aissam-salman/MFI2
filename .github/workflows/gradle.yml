name: Java CI with Gradle and Deploy to EC2

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3.1.0

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      # Nouvelle étape : copier les fichiers nécessaires pour le déploiement
      - name: Prepare deployment files
        run: |
          cp build/libs/MFI2-0.0.1-SNAPSHOT.jar ./

      # Nouvelle étape : déploiement sur EC2
      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem
          scp -i ec2_key.pem Dockerfile docker-compose.yaml MFI2-0.0.1-SNAPSHOT.jar $EC2_USER@$EC2_HOST:~
          ssh -i ec2_key.pem $EC2_USER@$EC2_HOST << 'EOF'
            cd /home/$EC2_USER/
            docker-compose down
            docker-compose up --build -d
          EOF

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v3.1.0
